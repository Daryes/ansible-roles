---

# import the package install role
- name: Monitoring Prometheus agent | PostgreSQL - requirements
  include_role: name=_include-pkg_install
  vars:
    arg_install_comment: "Monitoring Prometheus agent | PostgreSQL"
    arg_install_packages: "{{ role_prometheus_agent_postgresql_requirements }}"


- include_role: name=_include-exe_download_copy
  vars:
    arg_install_comment: "Monitoring Prometheus agent | PostgreSQL"
    arg_install_exe_fullpath: "{{ role_prometheus_agent_postgresql_dist.bin }}"
    arg_install_exe_version: "{{ prometheus_agent_postgresql_version }}"
    arg_install_exe_version_arg: "--version"
    arg_install_exe_download_url: "{{ role_prometheus_agent_postgresql_package_url }}"
    arg_install_exe_hash: "{{ prometheus_agent_postgresql_version_hash }}"
    arg_install_exe_is_compressed_archive: yes
    arg_install_exe_compressed_archive_binaries_to_link: [ "{{ role_prometheus_agent_postgresql_dist.bin |basename }}" ]
    arg_install_exe_service: "{{ role_prometheus_agent_postgresql_dist.service }}"
    arg_install_exe_version_same_for_all: "{{ prometheus_agent_version_same_for_all }}"


- name: Monitoring Prometheus agent | PostgreSQL - install service files
  template:
    src: "templates/{{ item.file }}.j2"
    dest: "{{ var_file_dest }}"
    owner: "{{ item.owner |default('root') }}"
    group: "{{ item.group |default( item.owner | default('root') ) }}"
    mode: "{{ item.mode |default('0644') }}"
  vars:
    var_file_dest: "{{ item.dest |default(item.file) }}"
  with_items:
    - { file: "/etc/systemd/system/{{ role_prometheus_agent_postgresql_dist.service }}" }
    - { file: "{{ role_prometheus_agent_mysq_dist.service_conf }}" }
    - { file: "{{ role_prometheus_agent_postgresql_dist.auth }}",  owner: "{{ role_prometheus_agent_postgresql_dist.user }}",  mode: "0600" }
  loop_control:
    label: "file: {{ var_file_dest }}"
  notify: "reload systemd-daemon"
  register: task_config_status
  become: yes


- name: Monitoring Prometheus agent | PostgreSQL - create monitoring db user
  community.postgresql.postgresql_user:
    name: "{{ prometheus_agent_postgresql_user }}"
    password: "{{ prometheus_agent_postgresql_password }}"
    expires: "infinity"
    state: present
  when: prometheus_agent_postgresql_user_create |bool
  # required to switch into pgsql user
  become: true
  become_user: "{{ prometheus_agent_postgresql_system_user }}"
  become_flags: "su - {{prometheus_agent_postgresql_system_user }} -c"


# To verify the exact grants in PostgreSQL, use: SHOW GRANTS FOR user
- name: Monitoring Prometheus agent | PostgreSQL - give grants to the monitoring db user
  community.postgresql.postgresql_membership:
    groups: [ "pg_monitor" ]
    target_roles: [ "{{ prometheus_agent_postgresql_user }}" ]
    state: present
  when: prometheus_agent_postgresql_user_create |bool
  # required to switch into pgsql user
  become: true
  become_user: "{{ prometheus_agent_postgresql_system_user }}"
  become_flags: "su - {{ prometheus_agent_postgresql_system_user }} -c"


# force the notify handlers to execute now
- meta: flush_handlers


# _pkg_download_copy_status is generated by _include-exe_download_copy
- name: Monitoring Prometheus agent | PostgreSQL - stop service on change
  service:
    name: "{{ role_prometheus_agent_postgresql_dist.service }}"
    state: "stopped"
  when: task_config_status is changed or task_config_global is changed
  become: yes


# depending of the version, the agent can be installed in a disabled state
- name: Monitoring Prometheus agent | PostgreSQL - enable and start the service
  service:
    name: "{{ role_prometheus_agent_postgresql_dist.service }}"
    state: started
    enabled: yes

