---

- name: webserver nginx | config - add new conf.d settings
  template:
    src: "{{ item }}"
    dest: "{{ var_file_dest }}"
    owner: root
    group: root
    mode: "0644"
  vars:
    var_file_dest: "/etc/nginx/conf.d/{{ item | basename | regex_replace('.j2$','') }}"
  with_fileglob:
    - "templates/etc/nginx/conf.d/*.j2"
  loop_control:
    label: "{{ var_file_dest }}"
  notify: reload nginx validate config


# select+map will filter to the targeted attribute
# select() will remove empty entries.
# sum() is used to flatten the list, from [a,b],c,[d] to [ a,b,c,d ]
- name: webserver nginx | modules - install new modules
  template:
    src: "{{ item }}"
    dest: "/etc/nginx/modules-available/{{ var_module_name }}"
    owner: "root"
    group: "root"
    mode: "644"
  vars:
    var_module_name: "{{ item |basename |regex_replace('.j2$', '') }}"
    # variable for the template stream-servers
    allStream: "{{ task_web_nginx_stream_merged }}"
  with_items:
    - "{{ role_nginx_mandatory_modules }}"
    - "{{ nginx_global_extra_modules }}"
    - "{{ task_web_nginx_merged |map(attribute='extra_modules', default=[]) |select() |list |sum(start=[]) }}"
  loop_control:
    label: "module available => {{ var_module_name }}"
  # some modules cannot work without a service restart
  notify: restart nginx validate config


# select+map will filter to the targeted attribute
# select() will remove empty entries.
# sum() is used to flatten the list, from [a,b],c,[d] to [ a,b,c,d ]
- name: webserver nginx | modules - activate the modules
  file:
    src: "/etc/nginx/modules-available/{{ var_module_name }}"
    dest: "/etc/nginx/modules-enabled/{{ var_module_name }}"
    state: link
  vars:
    var_module_name: "{{ item |basename |regex_replace('.j2$', '') }}"
  with_items:
    - "{{ role_nginx_mandatory_modules }}"
    - "{{ nginx_global_extra_modules }}"
    - "{{ task_web_nginx_merged |map(attribute='extra_modules', default=[]) |select() |list |sum(start=[]) }}"
  loop_control:
    label: "modules enabled/{{ var_module_name }}"
  # some modules cannot work without a service restart
  notify: restart nginx validate config

