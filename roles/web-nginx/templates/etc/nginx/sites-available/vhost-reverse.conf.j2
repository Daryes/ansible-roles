# {{ ansible_managed }}

{# thisVhost is a variable from the web-nginx role, containing the informations from <app-group>_nginx  -#}
{# -#}
{% set current_vhost_log_dir = thisVhost.site_vhost_log_dir |default( role_nginx_log )  -%}
{% set current_vhost_log_name = thisVhost.site_vhost_log_name |default("vhost-" + thisVhost.server_name)  -%}
{# -#}
# http with redirect to https
server {
    listen {{ thisVhost.listen_ip |default('*') }}:80;
    server_name {{ thisVhost.server_name }}{% if thisVhost.server_alias |default( [] ) |length > 0 %} {{ thisVhost.server_alias |join(" ") }}{% endif %};

    # let's encrypt support
    location /.well-known/ {
        try_files $uri $uri/ =404;
    }

    access_log {{ current_vhost_log_dir }}/{{ current_vhost_log_name }}_access.log;
    error_log  {{ current_vhost_log_dir }}/{{ current_vhost_log_name }}_error.log  error;

    location / {
        return 307 https://$server_name$request_uri;
    }
}

server {
    listen {{ thisVhost.listen_ip |default('*') }}:443 ssl http2;
    server_name {{ thisVhost.server_name }}{% if thisVhost.server_alias |default( [] ) |length > 0 %} {{ thisVhost.server_alias |join(" ") }}{% endif %};


    # ssl configuration - the cert must be in PEM format
    ssl_certificate     {{ thisVhost.ssl_cert_pem }};
    ssl_certificate_key {{ thisVhost.ssl_cert_key }};
    # ssl custom security
    include conf.d/ssl_security.include;


    access_log {{ current_vhost_log_dir }}/{{ current_vhost_log_name }}_access.log;
    error_log  {{ current_vhost_log_dir }}/{{ current_vhost_log_name }}_error.log  error;


    # security through ip address filtering
    {% if not thisVhost.corp_access |default(false) |bool %}# not activated - {% endif %}if ($corp_access = 0) { return 403; }

{% for loopRaw in thisVhost.raw_settings |default( [] ) |flatten %}
{%   if loop.first %}
    # raw_settings extra parameters
{%   endif %}
    {{ loopRaw |indent(width=4, first=false) }}
{% endfor %}

    location / {
        proxy_pass              {{ thisVhost.proxypass_target }};
        include conf.d/proxy_params.include;

        # websocket support
        include conf.d/proxy_websocket.include;
{% for loopRaw in thisVhost.proxy_raw_settings |default( [] ) |flatten %}
{%   if loop.first %}
        # proxy_raw_settings extra parameters
{%   endif %}
        {{ loopRaw |indent(width=8, first=false) }}
{% endfor %}
    }
}

