---

# fix a variable inversion with Windows systems
# https://en.wikipedia.org/wiki/List_of_Microsoft_Windows_versions
- name: Windows | fix inverted variables
  set_fact:
    cacheable: no
    _tmpSystem: "{{ ansible_system }}"
    # ref: https://github.com/ansible/ansible/blob/devel/lib/ansible/module_utils/facts/virtual/linux.py
    # regex_search result is an array if found, otherwise a single blank string : use default([''], true) to force an array in all situations
    _tmpVirtFact: "{{ ( ansible_system_vendor + ' ' + ansible_product_name ) |regex_search('(VMware|openstack)', '\\1', ignorecase=True) |default([''], true) |first }}"


- name: Windows | add missing facts
  set_fact:
    cacheable: yes
    # ansible usually report "type=kvm" for unknown type
    ansible_virtualization_type: "{{ _tmpVirtFact |default('kvm', true) }}"

    # ansible set "role=host" if the server is not a VM
    ansible_virtualization_role: "{{ 'guest' if _tmpVirtFact |length > 0 else 'host' }}"

    # Windows facts reversal between _system, _os_family and _distrib
    ansible_system: "{{ ansible_os_family }}"
    ansible_os_family: "{{ _tmpSystem }}"
    ansible_distribution_release: "{{ ansible_distribution_major_version }}"

    # lsb is not generated for Windows, simulate it
    ansible_lsb:
      description: "{{ ansible_distribution |regex_replace('microsoft ', '', ignorecase=True) }}"
      id: "{{ _tmpSystem }}"
      major_release: "{{ ansible_distribution_major_version  }}"
      release: "{{ ansible_distribution_version }}"

    # on Windows 'all_ipv?_addresses' are not generated by ansible - only ip_addresses exists
    ansible_all_ipv4_addresses: "{{ ansible_ip_addresses |ipv4('address') }}"
    ansible_all_ipv6_addresses: "{{ ansible_ip_addresses |ipv6('address') }}"

